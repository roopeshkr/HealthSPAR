<<<<<<< HEAD
2023-09-22 00:06:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 00:06:27 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 00:06:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:06:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 0 Neo4j repository interfaces.
2023-09-22 00:06:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:06:28 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 5 Neo4j repository interfaces.
2023-09-22 00:06:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 00:06:29 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 00:06:29 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 00:06:29 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 00:06:29 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1740 ms
2023-09-22 00:06:29 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 873497090 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-22 00:06:29 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:06:29 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 00:06:29 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:06:29 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:06:29 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:06:29 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:06:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 00:07:15 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 00:07:15 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 00:07:15 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 00:07:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (p:Patient)-[:LOCATED_IN]->(c:City)<-[:LOCATED_IN]-(h:Hospital) WHERE ID(p) = $patientId RETURN h
	                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 00:18:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 00:18:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 00:18:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:18:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184 ms. Found 0 Neo4j repository interfaces.
2023-09-22 00:18:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:18:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 5 Neo4j repository interfaces.
2023-09-22 00:18:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 00:18:37 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 00:18:37 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 00:18:37 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 00:18:37 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1695 ms
2023-09-22 00:18:38 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 792530089 created for server address fb3f5942.databases.neo4j.io:7687
2023-09-22 00:18:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:18:38 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 00:18:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:18:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:18:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:18:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:18:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 00:18:45 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 00:18:45 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 00:18:45 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 00:18:47 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:18:47 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:18:48 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:18:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:19:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:19:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:19:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:25:27 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.transaction.TransactionSystemException: Could not open a new Neo4j session: Driver execution failed] with root cause
java.net.UnknownHostException: No such host is known (fb3f5942.databases.neo4j.io)
	at org.neo4j.driver.internal.util.Futures.blockingGet(Futures.java:110)
	at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:95)
	at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:91)
	at org.springframework.data.neo4j.core.transaction.Neo4jTransactionManager.doBegin(Neo4jTransactionManager.java:306)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:601)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy3/jdk.proxy3.$Proxy87.save(Unknown Source)
	at com.stackroute.service.HospitalServiceImpl.createHospital(HospitalServiceImpl.java:20)
	at com.stackroute.controller.HospitalController.createHospital(HospitalController.java:27)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
	Suppressed: org.neo4j.driver.internal.util.ErrorUtil$InternalExceptionCause: null
		at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
		at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
		at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1059)
		at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1668)
		at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1003)
		at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1658)
		at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1524)
		at org.neo4j.driver.internal.DefaultDomainNameResolver.resolve(DefaultDomainNameResolver.java:35)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.resolveAllByDomainName(RediscoveryImpl.java:405)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.resolve(RediscoveryImpl.java:362)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookupOnInitialRouter(RediscoveryImpl.java:254)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookupOnInitialRouterThenOnKnownRouters(RediscoveryImpl.java:190)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookup(RediscoveryImpl.java:147)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookupClusterComposition(RediscoveryImpl.java:124)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookupClusterComposition(RediscoveryImpl.java:111)
		at org.neo4j.driver.internal.cluster.RoutingTableRegistryImpl.ensureDatabaseNameIsCompleted(RoutingTableRegistryImpl.java:122)
		at org.neo4j.driver.internal.cluster.RoutingTableRegistryImpl.ensureRoutingTable(RoutingTableRegistryImpl.java:88)
		at org.neo4j.driver.internal.cluster.loadbalancing.LoadBalancer.acquireConnection(LoadBalancer.java:108)
		at org.neo4j.driver.internal.async.NetworkSession.lambda$acquireConnection$24(NetworkSession.java:308)
		at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:144)
		at org.neo4j.driver.internal.async.NetworkSession.acquireConnection(NetworkSession.java:303)
		at org.neo4j.driver.internal.async.NetworkSession.lambda$beginTransactionAsync$5(NetworkSession.java:146)
		at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:144)
		at org.neo4j.driver.internal.async.NetworkSession.beginTransactionAsync(NetworkSession.java:146)
		at org.neo4j.driver.internal.async.NetworkSession.beginTransactionAsync(NetworkSession.java:133)
		at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:96)
		... 56 common frames omitted
2023-09-22 00:25:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 00:25:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 00:25:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:25:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 259 ms. Found 0 Neo4j repository interfaces.
2023-09-22 00:25:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:25:52 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 5 Neo4j repository interfaces.
2023-09-22 00:25:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 00:25:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 00:25:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 00:25:54 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 00:25:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2272 ms
2023-09-22 00:25:54 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 274767605 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 00:25:54 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:25:54 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 00:25:54 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:25:54 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:25:54 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:25:54 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:25:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 00:26:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 00:26:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 00:26:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-09-22 00:26:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:26:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:26:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:26:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:26:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 00:26:26 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:27:51 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:27:51 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:27:52 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:27:53 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:00 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:28:00 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:28:00 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:28:00 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:28:01 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:28:02 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:28:02 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:28:02 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:14 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:17 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:17 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:17 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:17 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:20 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:22 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:23 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:24 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:24 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:26 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:27 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:30 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:29:31 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:30:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:30:22 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:31:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:31:32 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:31:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:32:38 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:32:39 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:32:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:32:51 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:32:54 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:32:54 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-22 00:33:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 00:33:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                               ^
The query used a deprecated function: `id`.
2023-09-22 00:33:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:33:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:33:31 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN count(patient)
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:31 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $id DETACH DELETE patient
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN count(patient)
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $id DETACH DELETE patient
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN count(patient)
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $id DETACH DELETE patient
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:33:42 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 00:33:42 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                               ^
The query used a deprecated function: `id`.
2023-09-22 00:33:42 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:33:42 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:34:34 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:34:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 00:34:36 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 00:34:36 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 00:56:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 00:56:02 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 00:56:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:56:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 271 ms. Found 0 Neo4j repository interfaces.
2023-09-22 00:56:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 00:56:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 90 ms. Found 5 Neo4j repository interfaces.
2023-09-22 00:56:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 00:56:04 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 00:56:04 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 00:56:04 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 00:56:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2348 ms
2023-09-22 00:56:04 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1172100978 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 00:56:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:56:05 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 00:56:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:56:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:56:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:56:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 00:56:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 00:56:29 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 00:56:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 00:56:29 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-22 00:56:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 00:56:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 00:56:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 00:56:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 00:56:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:02:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:02:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:02:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:02:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:02:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:02:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:02:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:02:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:02:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:02:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:02:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2329 ms
2023-09-22 01:02:36 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 2070068642 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:02:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:02:36 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:02:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:02:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:02:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:02:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:02:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:02:55 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:02:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:02:55 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2023-09-22 01:02:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:02:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:02:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:02:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:02:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:06:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:06:18 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:06:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:06:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:06:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:06:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:06:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:06:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:06:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:06:20 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:06:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1942 ms
2023-09-22 01:06:20 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 731228485 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:06:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:06:20 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:06:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:06:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:06:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:06:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:06:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:07:16 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:07:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:07:16 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-09-22 01:07:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:07:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:07:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:07:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:07:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:07:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:07:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:07:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:07:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:07:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:09:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:09:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:09:33 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:09:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:09:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:09:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:09:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:09:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:09:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:09:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:09:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1529 ms
2023-09-22 01:09:35 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1215024403 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:09:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:09:35 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:09:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:09:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:09:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:09:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:09:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:09:42 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:09:42 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:09:42 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-09-22 01:09:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:09:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:09:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:09:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:09:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:10:10 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:10:10 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:10:11 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:10:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 261 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:10:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:10:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:10:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:10:13 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:10:13 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:10:13 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:10:13 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2732 ms
2023-09-22 01:10:13 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1028099726 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:10:14 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:10:14 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:10:14 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:10:14 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:10:14 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:10:14 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:10:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:11:15 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:11:15 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:11:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:11:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 229 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:11:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:11:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:11:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:11:17 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:11:17 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:11:17 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:11:17 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2281 ms
2023-09-22 01:11:17 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 884363047 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:11:17 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:11:17 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:11:17 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:11:17 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:11:17 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:11:18 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:11:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:11:23 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:11:23 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:11:23 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2023-09-22 01:11:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:11:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:11:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:11:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:11:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:20:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:20:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:20:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:20:33 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:20:33 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:20:33 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:20:33 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1884 ms
2023-09-22 01:20:34 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 2100668365 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:20:34 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:20:34 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:20:34 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:20:34 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:20:34 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:20:34 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:20:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:20:40 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:20:40 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:20:40 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 01:20:42 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:20:42 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:20:42 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:20:42 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:20:42 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:20:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:20:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:20:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:20:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:20:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:20:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:28:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:28:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:28:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:28:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 116 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:28:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:28:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:28:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:28:52 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:28:52 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:28:52 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:28:52 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1837 ms
2023-09-22 01:28:52 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 870703952 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:28:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:28:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:28:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:28:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:28:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:28:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:28:53 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:29:01 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:29:01 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:29:01 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 01:29:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:29:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:29:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:29:08 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:08 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:29:08 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:08 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:29:08 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:29:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:29:22 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:22 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:29:22 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:29:22 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:29:22 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:30:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:30:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:30:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:30:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:30:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:30:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:30:18 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:30:18 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:30:18 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:30:18 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:30:18 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2447 ms
2023-09-22 01:30:19 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 884363047 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:30:19 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:30:19 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:30:19 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:30:19 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:30:19 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:30:19 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:30:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:30:28 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:30:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:30:28 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-22 01:30:30 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:30:30 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:30:30 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:30:30 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:30:30 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:31:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:31:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:31:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:31:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 198 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:31:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:31:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:31:24 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:31:24 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:31:24 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:31:24 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:31:24 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2605 ms
2023-09-22 01:31:25 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 42233307 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:31:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:31:25 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:31:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:31:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:31:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:31:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:31:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:31:31 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:31:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:31:31 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 01:31:33 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:31:33 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:31:33 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:31:33 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:31:33 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:31:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:31:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:31:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:31:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:31:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:31:41 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:33:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:33:03 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:33:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:33:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 276 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:33:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:33:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:33:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:33:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:33:06 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:33:06 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:33:06 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2563 ms
2023-09-22 01:33:06 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 42233307 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:33:07 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:33:07 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:33:07 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:33:07 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:33:07 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:33:07 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:33:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:33:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:33:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:33:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-22 01:33:16 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:33:16 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:33:16 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:33:16 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:33:16 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:33:17 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:34:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 01:34:49 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 01:34:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:34:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 236 ms. Found 0 Neo4j repository interfaces.
2023-09-22 01:34:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 01:34:50 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 Neo4j repository interfaces.
2023-09-22 01:34:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 01:34:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 01:34:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 01:34:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 01:34:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2207 ms
2023-09-22 01:34:52 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 103144577 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 01:34:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:34:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 01:34:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:34:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:34:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:34:52 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 01:34:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 01:35:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 01:35:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 01:35:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:35:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:35:40 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-22 01:36:07 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:36:07 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:36:07 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:36:07 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:36:07 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:36:07 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:36:20 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:37:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:37:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:37:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:37:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:37:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:37:58 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:38:36 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:39:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:39:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:39:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:39:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:39:43 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:39:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:40:05 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:41:30 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:42:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:43:39 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:44:09 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:44:09 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:44:09 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:44:09 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:44:09 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 01:44:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:44:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:44:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:44:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:44:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:44:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:44:40 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:24 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 01:46:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:47:55 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:48:45 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:50:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:51:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:51:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:51:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:48 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:51:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:12 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:52:51 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:52:51 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:52:51 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:52:51 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:52:51 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:52:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:54:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:54:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:54:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:54:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:54:20 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:21 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:54:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:55:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:55:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:55:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:55:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:55:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:55:52 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:16 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:56:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:56:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:56:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:56:39 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:39 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:56:39 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:39 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:56:39 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:40 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:56:43 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:41 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:57:55 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 01:58:25 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 10:26:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-22 10:26:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-22 10:26:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 10:26:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 235 ms. Found 0 Neo4j repository interfaces.
2023-09-22 10:26:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-22 10:26:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 5 Neo4j repository interfaces.
2023-09-22 10:26:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-22 10:26:54 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-22 10:26:54 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-22 10:26:54 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-22 10:26:54 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2270 ms
2023-09-22 10:26:55 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1807351254 created for server address 3f730140.databases.neo4j.io:7687
2023-09-22 10:26:55 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 10:26:55 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-22 10:26:55 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 10:26:55 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 10:26:55 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 10:26:55 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-22 10:26:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-22 10:27:27 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-22 10:27:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-22 10:27:27 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-09-22 10:27:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 10:27:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:27:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 10:27:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 10:27:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:27:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:28:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 10:29:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 10:29:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:29:16 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 10:29:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:23 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-22 10:29:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-22 10:29:33 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-22 10:29:33 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-22 10:29:33 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-22 10:29:33 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-22 10:29:33 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-22 10:29:35 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
=======
2023-09-24 12:07:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-24 12:07:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-24 12:07:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-24 12:07:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 0 Neo4j repository interfaces.
2023-09-24 12:07:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-24 12:07:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 5 Neo4j repository interfaces.
2023-09-24 12:07:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-24 12:07:35 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-24 12:07:35 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-24 12:07:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-24 12:07:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1953 ms
2023-09-24 12:07:36 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1163461949 created for server address 3f730140.databases.neo4j.io:7687
2023-09-24 12:07:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-24 12:07:36 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-24 12:07:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-24 12:07:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-24 12:07:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-24 12:07:36 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-24 12:07:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
>>>>>>> 3375b44602b3cb3d86353a5be02bab390baf7f76
