2023-09-27 10:03:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 10:03:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 10:03:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 10:03:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 228 ms. Found 0 Neo4j repository interfaces.
2023-09-27 10:03:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 10:03:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 5 Neo4j repository interfaces.
2023-09-27 10:03:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 10:03:21 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 10:03:21 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 10:03:21 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 10:03:21 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2104 ms
2023-09-27 10:03:22 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 886934447 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 10:03:22 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 10:03:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 10:03:22 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 10:03:22 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 10:03:22 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 10:03:22 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 10:03:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 10:05:48 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-27 10:05:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-27 10:05:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:05:50 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 10:08:28 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 10:08:28 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 10:08:28 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 10:08:28 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 10:08:28 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:08:29 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:09:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 10:50:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:27:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:33:02 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:39 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:36:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:48 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:38:49 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ^
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:09 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:39:59 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:16 [http-nio-8080-exec-3] WARN  o.s.web.servlet.PageNotFound - Request method 'POST' is not supported
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:41:29 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:42:20 [http-nio-8080-exec-4] WARN  o.s.web.servlet.PageNotFound - Request method 'POST' is not supported
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 11:43:35 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 11:54:56 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 11:54:57 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 11:54:57 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 11:55:18 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.TransientDataAccessResourceException: Server at 3f730140.databases.neo4j.io:7687 is no longer available; Error code 'N/A'] with root cause
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:401)
	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:434)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 11:56:07 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-27 11:58:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 11:58:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 11:58:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 11:58:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 11:58:19 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 11:58:19 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:01:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:15:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 12:15:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 12:15:45 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 12:15:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 0 Neo4j repository interfaces.
2023-09-27 12:15:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 12:15:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 5 Neo4j repository interfaces.
2023-09-27 12:15:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 12:15:46 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 12:15:46 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 12:15:47 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 12:15:47 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1923 ms
2023-09-27 12:15:47 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1679734149 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 12:15:47 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 12:15:47 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 12:15:47 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 12:15:47 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 12:15:47 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 12:15:47 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 12:15:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 12:16:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-27 12:16:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-27 12:16:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:16:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:16:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 12:16:10 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 12:16:26 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Specialty`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:34 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Specialty`) SET department = $__properties__ RETURN department UNION MATCH (department:`Specialty`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 12:20:35 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:20:42 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:23:26 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:24:24 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:26:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:26:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:26:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:26:14 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:26:15 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:29:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:29:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:29:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:29:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:29:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:14 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:29:27 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:30:18 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:32:59 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:32:59 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:32:59 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:32:59 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:32:59 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:33:00 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:33:01 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:33:55 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:35:04 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:35:04 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:35:04 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:35:04 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:35:04 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:35:05 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:35:35 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:35:35 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:35:35 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:35:35 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:35:35 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:36 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:35:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:37:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:37:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:37:49 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:37:50 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:51 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:37:59 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 12:38:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:38:14 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:14 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:15 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:28 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:47 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:38:48 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:45 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	
The query used a deprecated function: `id`.
2023-09-27 12:39:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Specialty: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_specialization:`Specialty`) | hospital_doctors_specialization{.description, .name, __nodeLabels__: labels(hospital_doctors_specialization), __internalNeo4jId__: id(hospital_doctors_specialization), __elementId__: toString(id(hospital_doctors_specialization))}]}], Hospital_OFFERS_SPECIALITY_Specialty: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_specialty:`Specialty`) | hospital_specialty{.description, .name, __nodeLabels__: labels(hospital_specialty), __internalNeo4jId__: id(hospital_specialty), __elementId__: toString(id(hospital_specialty))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:39:55 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:39:56 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:56 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:39:56 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:39:56 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:39:56 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:39:56 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:40:41 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:41 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:40:41 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:41 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:40:41 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:40:41 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:40:42 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:42 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:40:42 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:42 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:40:42 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:40:42 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:40:45 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:45 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:40:45 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:45 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:40:45 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:40:45 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:40:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:40:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:40:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:40:49 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:40:49 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:41:03 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:03 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:41:03 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:03 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:41:03 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:41:03 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:41:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:41:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:41:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:41:05 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:41:07 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:07 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:41:07 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:41:07 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:41:07 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:41:07 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:42:27 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:42:27 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:42:27 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:42:49 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:49 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:42:49 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:49 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:42:49 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:42:49 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:42:50 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:50 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:42:50 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:42:50 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:42:50 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:42:50 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:43:58 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 12:43:58 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 12:43:58 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 12:43:58 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 12:43:58 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 12:43:58 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 12:52:54 [Neo4jDriverIO-2-2] WARN  o.n.d.i.cluster.RediscoveryImpl - Received a recoverable discovery error with server '3f730140.databases.neo4j.io(34.126.64.110):7687', will continue discovery with other routing servers if available. Complete failure is reported separately from this entry.
2023-09-27 12:52:54 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.transaction.TransactionSystemException: Could not open a new Neo4j session: Could not perform discovery for database '<default database>'. No routing server available.] with root cause
org.neo4j.driver.exceptions.ServiceUnavailableException: Could not perform discovery for database '<default database>'. No routing server available.
	at org.neo4j.driver.internal.util.Futures.blockingGet(Futures.java:110)
	at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:95)
	at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:91)
	at org.springframework.data.neo4j.core.transaction.Neo4jTransactionManager.doBegin(Neo4jTransactionManager.java:306)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:601)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy3/jdk.proxy3.$Proxy87.findById(Unknown Source)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:36)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
	Suppressed: org.neo4j.driver.exceptions.DiscoveryException: Failed to update routing table with server '3f730140.databases.neo4j.io(34.126.64.110):7687'.
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.handleRoutingProcedureError(RediscoveryImpl.java:320)
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lambda$lookupOnRouter$12(RediscoveryImpl.java:306)
		at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934)
		at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911)
		at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
		at java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2179)
		at org.neo4j.driver.internal.handlers.ChannelReleasingResetResponseHandler.lambda$resetCompleted$2(ChannelReleasingResetResponseHandler.java:63)
		at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:863)
		at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:841)
		at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
		at java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2179)
		at org.neo4j.driver.internal.util.Futures.lambda$asCompletionStage$0(Futures.java:72)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557)
		at io.netty.util.concurrent.DefaultPromise.access$200(DefaultPromise.java:35)
		at io.netty.util.concurrent.DefaultPromise$1.run(DefaultPromise.java:503)
		at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
		at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
		at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		... 1 common frames omitted
	Caused by: org.neo4j.driver.exceptions.ServiceUnavailableException: Connection to the database terminated. Please ensure that your database is listening on the correct host and port and that you have compatible encryption settings both on Neo4j server and driver. Note that the default encryption setting has changed in Neo4j 4.0.
		at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:48)
		at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:42)
		at org.neo4j.driver.internal.async.inbound.ChannelErrorHandler.channelInactive(ChannelErrorHandler.java:67)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
		at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
		at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1168)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
		at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
		at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
		... 8 common frames omitted
	Suppressed: org.neo4j.driver.internal.util.ErrorUtil$InternalExceptionCause: null
		at org.neo4j.driver.internal.cluster.RediscoveryImpl.lookupClusterComposition(RediscoveryImpl.java:110)
		at org.neo4j.driver.internal.cluster.RoutingTableRegistryImpl.ensureDatabaseNameIsCompleted(RoutingTableRegistryImpl.java:122)
		at org.neo4j.driver.internal.cluster.RoutingTableRegistryImpl.ensureRoutingTable(RoutingTableRegistryImpl.java:88)
		at org.neo4j.driver.internal.cluster.loadbalancing.LoadBalancer.acquireConnection(LoadBalancer.java:108)
		at org.neo4j.driver.internal.async.NetworkSession.lambda$acquireConnection$24(NetworkSession.java:308)
		at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:144)
		at org.neo4j.driver.internal.async.NetworkSession.acquireConnection(NetworkSession.java:303)
		at org.neo4j.driver.internal.async.NetworkSession.lambda$beginTransactionAsync$5(NetworkSession.java:146)
		at java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2341)
		at java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:144)
		at org.neo4j.driver.internal.async.NetworkSession.beginTransactionAsync(NetworkSession.java:146)
		at org.neo4j.driver.internal.async.NetworkSession.beginTransactionAsync(NetworkSession.java:133)
		at org.neo4j.driver.internal.InternalSession.beginTransaction(InternalSession.java:96)
		... 56 common frames omitted
2023-09-27 12:53:15 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.transaction.TransactionSystemException: Could not open a new Neo4j session: Server at 3f730140.databases.neo4j.io:7687 is no longer available] with root cause
org.neo4j.driver.exceptions.ServiceUnavailableException: Connection to the database terminated. Please ensure that your database is listening on the correct host and port and that you have compatible encryption settings both on Neo4j server and driver. Note that the default encryption setting has changed in Neo4j 4.0.
	at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:48)
	at org.neo4j.driver.internal.util.ErrorUtil.newConnectionTerminatedError(ErrorUtil.java:42)
	at org.neo4j.driver.internal.async.inbound.ChannelErrorHandler.channelInactive(ChannelErrorHandler.java:67)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:411)
	at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:376)
	at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1168)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)
	at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)
	at io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813)
	at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 13:55:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 13:55:37 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 13:55:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:55:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 166 ms. Found 0 Neo4j repository interfaces.
2023-09-27 13:55:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:55:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 5 Neo4j repository interfaces.
2023-09-27 13:55:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 13:55:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 13:55:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 13:55:38 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 13:55:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1583 ms
2023-09-27 13:55:39 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 319339838 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 13:55:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:55:39 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 13:55:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:55:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:55:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:55:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:55:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 13:57:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 13:57:01 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 13:57:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:57:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 233 ms. Found 0 Neo4j repository interfaces.
2023-09-27 13:57:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:57:03 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 Neo4j repository interfaces.
2023-09-27 13:57:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 13:57:05 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 13:57:05 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 13:57:05 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 13:57:05 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3376 ms
2023-09-27 13:57:05 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 724626744 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 13:57:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:57:05 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 13:57:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:57:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:57:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:57:05 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:57:06 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 13:58:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 13:58:20 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 13:58:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:58:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 184 ms. Found 0 Neo4j repository interfaces.
2023-09-27 13:58:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 13:58:21 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 Neo4j repository interfaces.
2023-09-27 13:58:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 13:58:22 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 13:58:22 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 13:58:22 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 13:58:22 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1947 ms
2023-09-27 13:58:22 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 724626744 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 13:58:23 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:58:23 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 13:58:23 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:58:23 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:58:23 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:58:23 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 13:58:23 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 14:04:42 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-27 14:04:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-27 14:04:42 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-27 14:04:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:04:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:04:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:04:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:04:44 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:04:44 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 14:07:29 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:07:29 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:07:29 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:07:29 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:07:29 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:07:29 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 14:07:39 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:07:39 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:07:39 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:07:39 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:07:39 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:07:40 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 14:21:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:21:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:21:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:21:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:21:40 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:21:40 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: Patient not found] with root cause
java.lang.IllegalArgumentException: Patient not found
	at com.stackroute.service.RecommendationService.lambda$recommendHospitalsForPatient$0(RecommendationService.java:37)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.stackroute.service.RecommendationService.recommendHospitalsForPatient(RecommendationService.java:37)
	at com.stackroute.controller.RecommendationController.getRecommendedHospitals(RecommendationController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-27 14:22:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:22:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:22:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:22:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:22:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:22:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:24:40 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:26:51 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:28:50 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:36:24 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:37:38 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:38:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:38:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:38:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:38:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:22 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:38:32 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:39:13 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:40:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:40:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:40:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:40:53 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:40:54 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:00 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:42:00 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:42:00 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:42:00 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:42:00 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:42:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                        ^
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:43:01 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:44:34 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:44:34 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 14:44:35 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:44:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:44:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:44:36 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:46:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 14:46:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 14:46:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 14:46:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 0 Neo4j repository interfaces.
2023-09-27 14:46:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 14:46:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 5 Neo4j repository interfaces.
2023-09-27 14:46:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 14:46:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 14:46:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 14:46:25 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 14:46:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1500 ms
2023-09-27 14:46:25 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 883486039 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 14:46:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:46:25 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 14:46:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:46:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:46:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:46:25 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:46:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 14:47:22 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-27 14:47:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-27 14:47:22 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-27 14:47:24 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:47:24 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:47:24 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:47:24 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:47:24 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:47:25 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:53:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:53:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:53:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:53:25 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownLabelWarning: The provided label is not in the database.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
One of the labels in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing label name is: Department)
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:53:43 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:54:00 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:54:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`SPECIALIZES_IN`]->(:`Department`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Department`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Department`) SET department = $__properties__ RETURN department UNION MATCH (department:`Department`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                                     ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Department`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Department`) SET department = $__properties__ RETURN department UNION MATCH (department:`Department`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                        ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Department`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Department`) SET department = $__properties__ RETURN department UNION MATCH (department:`Department`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                                                                                                                                                                                                     ^
The query used a deprecated function: `id`.
2023-09-27 14:55:42 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Department`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (department:`Department`) SET department = $__properties__ RETURN department UNION MATCH (department:`Department`) WHERE id(department) = $__id__ SET department += $__properties__ RETURN department
	                                        ^
The query used a deprecated function: `id`.
2023-09-27 14:55:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-27 14:55:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-27 14:55:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-27 14:57:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-27 14:57:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-27 14:57:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 14:57:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 0 Neo4j repository interfaces.
2023-09-27 14:57:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-27 14:57:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 5 Neo4j repository interfaces.
2023-09-27 14:57:31 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-27 14:57:31 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-27 14:57:31 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-27 14:57:31 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-27 14:57:31 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1488 ms
2023-09-27 14:57:32 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 724626744 created for server address 3f730140.databases.neo4j.io:7687
2023-09-27 14:57:32 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:57:32 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-27 14:57:32 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Department is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:57:32 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:57:32 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:57:32 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-27 14:57:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-27 14:58:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-27 14:58:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-27 14:58:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-27 14:58:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 14:58:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 14:58:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 14:58:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 14:58:36 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 14:58:37 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-27 15:18:53 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-27 15:18:53 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-27 15:18:53 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                ^
The query used a deprecated function: `id`.
2023-09-27 15:18:53 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                                                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-27 15:18:53 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN patient{__nodeLabels__: labels(patient), __internalNeo4jId__: id(patient), __elementId__: toString(id(patient)), Patient_LOCATED_IN_City: [(patient)-[:`LOCATED_IN`]->(patient_city:`City`) | patient_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(patient_city), __internalNeo4jId__: id(patient_city), __elementId__: toString(id(patient_city))}]}
	                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	
The query used a deprecated function: `id`.
2023-09-27 15:18:54 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) RETURN hospital{.hospitalAmenities, .hospitalEmail, .hospitalImageURL, .hospitalName, .hospitalPhoneNumber, .hospitalRating, .hospitalReviews, .hospitalWebsite, .numberOfBeds, __nodeLabels__: labels(hospital), __internalNeo4jId__: id(hospital), __elementId__: toString(id(hospital)), Hospital_OFFERS_SPECIALITY_Department: [(hospital)-[:`OFFERS_SPECIALITY`]->(hospital_department:`Department`) | hospital_department{.description, .name, __nodeLabels__: labels(hospital_department), __internalNeo4jId__: id(hospital_department), __elementId__: toString(id(hospital_department))}], Hospital_HAS_DOCTOR_Doctor: [(hospital)-[:`HAS_DOCTOR`]->(hospital_doctors:`Doctor`) | hospital_doctors{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(hospital_doctors), __internalNeo4jId__: id(hospital_doctors), __elementId__: toString(id(hospital_doctors)), Doctor_SPECIALIZES_IN_Department: [(hospital_doctors)-[:`SPECIALIZES_IN`]->(hospital_doctors_departments:`Department`) | hospital_doctors_departments{.description, .name, __nodeLabels__: labels(hospital_doctors_departments), __internalNeo4jId__: id(hospital_doctors_departments), __elementId__: toString(id(hospital_doctors_departments))}]}], Hospital_LOCATED_IN_City: [(hospital)-[:`LOCATED_IN`]->(hospital_city:`City`) | hospital_city{.country, .district, .name, .state, .zip, __nodeLabels__: labels(hospital_city), __internalNeo4jId__: id(hospital_city), __elementId__: toString(id(hospital_city))}]}
	                                                                                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
