2023-09-20 20:20:26 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:20:26 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:20:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:20:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 219 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:20:27 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:20:27 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'cityRepository' defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration] for bean 'cityRepository' since there is already [Generic bean: class [com.stackroute.controller.CityController]; scope=singleton; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\CityRepository.class]] bound.
2023-09-20 20:20:27 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-09-20 20:20:27 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'cityRepository', defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\CityRepository.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2023-09-20 20:21:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:21:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:21:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:21:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:21:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:21:39 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'cityRepository' defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Cannot register bean definition [Root bean: class [org.springframework.data.neo4j.repository.support.Neo4jRepositoryFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration] for bean 'cityRepository' since there is already [Generic bean: class [com.stackroute.controller.CityController]; scope=singleton; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null; defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\CityRepository.class]] bound.
2023-09-20 20:21:39 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-09-20 20:21:39 [restartedMain] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'cityRepository', defined in com.stackroute.repository.CityRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration, could not be registered. A bean with that name has already been defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\CityRepository.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2023-09-20 20:23:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:23:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:23:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:23:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:23:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:23:36 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 Neo4j repository interfaces.
2023-09-20 20:23:37 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 20:23:37 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 20:23:37 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 20:23:37 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 20:23:37 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2060 ms
2023-09-20 20:23:37 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 510744457 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 20:23:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:23:38 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 20:23:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:23:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:23:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:23:38 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:23:38 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalController' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\HospitalController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
2023-09-20 20:23:38 [restartedMain] INFO  o.n.driver.internal.InternalDriver - Closing driver instance 510744457
2023-09-20 20:23:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2023-09-20 20:23:38 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-09-20 20:23:38 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalController' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\HospitalController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.stackroute.Main.main(Main.java:9)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 36 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 47 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'city' found for type 'Hospital'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:405)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:381)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:334)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:316)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:299)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:242)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:243)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:372)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:373)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.neo4j.repository.query.PartTreeNeo4jQuery.create(PartTreeNeo4jQuery.java:50)
	at org.springframework.data.neo4j.repository.query.Neo4jQueryLookupStrategy.resolveQuery(Neo4jQueryLookupStrategy.java:70)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 58 common frames omitted
2023-09-20 20:34:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:34:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:34:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:34:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:34:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:34:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 Neo4j repository interfaces.
2023-09-20 20:34:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 20:34:01 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 20:34:01 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 20:34:01 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 20:34:01 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1312 ms
2023-09-20 20:34:02 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1300944739 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 20:34:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:34:02 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 20:34:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:34:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:34:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:34:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:34:02 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalController' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\HospitalController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
2023-09-20 20:34:02 [restartedMain] INFO  o.n.driver.internal.InternalDriver - Closing driver instance 1300944739
2023-09-20 20:34:02 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2023-09-20 20:34:02 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-09-20 20:34:02 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalController' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\controller\HospitalController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:942)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.stackroute.Main.main(Main.java:9)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'hospitalServiceImpl' defined in file [C:\Users\roope\Desktop\healthspar\recommend-service\target\classes\com\stackroute\service\HospitalServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:245)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'hospitalRepository' defined in com.stackroute.repository.HospitalRepository defined in @EnableNeo4jRepositories declared on Neo4jRepositoriesRegistrar.EnableNeo4jRepositoriesConfiguration: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:888)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 36 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.stackroute.repository.HospitalRepository.findByCity(java.lang.String); Reason: No property 'city' found for type 'Hospital'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:245)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1817)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766)
	... 47 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'city' found for type 'Hospital'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:405)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:381)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:334)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:316)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:299)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:242)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:243)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:372)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1006)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:373)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.neo4j.repository.query.PartTreeNeo4jQuery.create(PartTreeNeo4jQuery.java:50)
	at org.springframework.data.neo4j.repository.query.Neo4jQueryLookupStrategy.resolveQuery(Neo4jQueryLookupStrategy.java:70)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 58 common frames omitted
2023-09-20 20:36:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:36:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:36:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:36:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:36:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:36:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 5 Neo4j repository interfaces.
2023-09-20 20:36:39 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 20:36:39 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 20:36:39 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 20:36:39 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 20:36:39 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1291 ms
2023-09-20 20:36:39 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1210158821 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 20:36:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:36:39 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 20:36:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:36:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:36:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:36:39 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:36:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 20:42:02 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 20:42:02 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 20:42:02 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-20 20:42:20 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:42:20 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:43:02 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:43:02 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:43:15 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:43:15 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:43:45 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:43:45 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:43:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:43:57 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:44:10 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:44:10 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:44:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 20:44:32 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 20:44:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:44:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 20:44:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 20:45:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:45:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 20:45:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 20:45:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 20:45:36 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 20:46:04 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 20:51:09 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 20:51:53 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 20:53:11 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:53:11 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:53:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:53:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:53:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:53:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 Neo4j repository interfaces.
2023-09-20 20:53:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 20:53:13 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 20:53:13 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 20:53:13 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 20:53:13 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1382 ms
2023-09-20 20:53:13 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 339779253 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 20:53:13 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:53:13 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 20:53:13 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:53:13 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:53:13 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:53:13 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:53:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 20:53:17 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 20:53:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 20:53:17 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-20 20:53:17 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.lang.Integer'. Check configuration for 'zip'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 20:55:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 20:55:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 20:55:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:55:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 0 Neo4j repository interfaces.
2023-09-20 20:55:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 20:55:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 Neo4j repository interfaces.
2023-09-20 20:55:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 20:55:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 20:55:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 20:55:20 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 20:55:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1319 ms
2023-09-20 20:55:20 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 834984455 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 20:55:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:55:20 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 20:55:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:55:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:55:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:55:20 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 20:55:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 20:55:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 20:55:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 20:55:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-20 20:55:42 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:55:42 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:56:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:56:26 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:56:46 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:56:46 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:57:03 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                          ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                          ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) WHERE id(city) = $__id__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                           ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:58:24 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 20:58:25 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:58:25 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:58:25 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`LOCATES_HOSPITAL`]->(:`Hospital`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 20:58:25 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`LOCATES_HOSPITAL`]->(:`Hospital`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 20:58:44 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 21:03:22 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 21:03:22 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 21:03:41 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 21:03:41 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 21:04:34 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 21:06:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 21:06:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 21:06:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:06:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 116 ms. Found 0 Neo4j repository interfaces.
2023-09-20 21:06:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:06:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 5 Neo4j repository interfaces.
2023-09-20 21:06:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 21:06:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 21:06:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 21:06:20 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 21:06:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1281 ms
2023-09-20 21:06:20 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 339779253 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 21:06:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:06:21 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 21:06:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:06:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:06:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:06:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:06:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 21:06:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 21:06:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 21:06:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-20 21:06:43 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 21:28:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 21:28:19 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 21:28:19 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:28:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 0 Neo4j repository interfaces.
2023-09-20 21:28:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:28:20 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 5 Neo4j repository interfaces.
2023-09-20 21:28:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 21:28:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 21:28:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 21:28:20 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 21:28:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1553 ms
2023-09-20 21:28:21 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 810072353 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 21:28:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:28:21 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 21:28:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:28:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:28:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:28:21 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:28:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 21:28:56 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 21:28:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 21:28:56 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-20 21:28:56 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<com.stackroute.model.Specialty>'. Check configuration for 'specialization'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<com.stackroute.model.Specialty>'. Check configuration for 'specialization'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 21:31:05 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<com.stackroute.model.Specialty>'. Check configuration for 'specialization'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<com.stackroute.model.Specialty>'. Check configuration for 'specialization'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 21:33:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 21:33:33 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 21:33:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:33:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 0 Neo4j repository interfaces.
2023-09-20 21:33:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:33:34 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 5 Neo4j repository interfaces.
2023-09-20 21:33:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 21:33:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 21:33:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 21:33:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 21:33:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1284 ms
2023-09-20 21:33:35 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 810072353 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 21:33:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:33:35 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 21:33:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:33:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:33:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:33:35 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:33:35 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 21:33:44 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 21:33:44 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 21:33:44 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 21:33:46 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 21:33:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:33:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 21:33:47 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 21:35:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 21:35:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 21:35:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 21:35:25 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 21:35:34 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                              ^
The query used a deprecated function: `id`.
2023-09-20 21:35:34 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:35:34 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                        ^
The query used a deprecated function: `id`.
2023-09-20 21:35:34 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-20 21:35:34 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	
The query used a deprecated function: `id`.
2023-09-20 21:35:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                              ^
The query used a deprecated function: `id`.
2023-09-20 21:35:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:35:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                        ^
The query used a deprecated function: `id`.
2023-09-20 21:35:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-20 21:35:43 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	
The query used a deprecated function: `id`.
2023-09-20 21:35:50 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN count(doctor)
	                              ^
The query used a deprecated function: `id`.
2023-09-20 21:41:48 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'com.stackroute.model.City'. Check configuration for 'city'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 21:42:40 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 21:42:40 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 21:42:41 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:42:41 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 0 Neo4j repository interfaces.
2023-09-20 21:42:41 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 21:42:41 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 5 Neo4j repository interfaces.
2023-09-20 21:42:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 21:42:41 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 21:42:41 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 21:42:41 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 21:42:41 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1283 ms
2023-09-20 21:42:42 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1062586211 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 21:42:42 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:42:42 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 21:42:42 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:42:42 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:42:42 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:42:42 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 21:42:42 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 21:42:46 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 21:42:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 21:42:46 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 21:42:48 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 21:43:04 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:02:50 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<java.lang.String>'. Check configuration for 'hospitalAmenities'] with root cause
jakarta.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'jakarta.validation.constraints.NotBlank' validating type 'java.util.List<java.lang.String>'. Check configuration for 'hospitalAmenities'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:58)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:104)
	at org.springframework.validation.DataBinder.validate(DataBinder.java:932)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.validateIfApplicable(AbstractMessageConverterMethodArgumentResolver.java:248)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:142)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
2023-09-20 22:04:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 22:04:28 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 22:04:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:04:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 0 Neo4j repository interfaces.
2023-09-20 22:04:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:04:29 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 5 Neo4j repository interfaces.
2023-09-20 22:04:29 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 22:04:29 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 22:04:29 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 22:04:29 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 22:04:29 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1243 ms
2023-09-20 22:04:29 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1380006032 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 22:04:30 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:04:30 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 22:04:30 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:04:30 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:04:30 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:04:30 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:04:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 22:04:38 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 22:04:38 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 22:04:38 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-20 22:04:39 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:39 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:04:39 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:04:39 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`OFFERS_SPECIALITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:04:40 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                       ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:01 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:09:02 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:15 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 22:09:15 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                       ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                        ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:20 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:09:21 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:09:42 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN count(hospital)
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:13:49 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:13:58 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:13:59 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:03 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:16 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:14:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:23 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:27 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WITH collect(toString(id(city))) AS __sn__ RETURN __sn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                  ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:29 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`City`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS city, __sr__, __srn__ RETURN city AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:14:37 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $__id__ RETURN count(city)
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:38 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE id(city) = $id DETACH DELETE city
	                          ^
The query used a deprecated function: `id`.
2023-09-20 22:14:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:14:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:14:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                                                                                                                                                                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 22:14:52 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) RETURN doctor{.bio, .doctorName, .endTime, .languagesSpoken, .qualification, .startTime, .yearOfExperience, __nodeLabels__: labels(doctor), __internalNeo4jId__: id(doctor), __elementId__: toString(id(doctor)), Doctor_SPECIALIZES_IN_Specialty: [(doctor)-[:`SPECIALIZES_IN`]->(doctor_specialization:`Specialty`) | doctor_specialization{.description, .name, __nodeLabels__: labels(doctor_specialization), __internalNeo4jId__: id(doctor_specialization), __elementId__: toString(id(doctor_specialization))}]}
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:15:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN count(doctor)
	                              ^
The query used a deprecated function: `id`.
2023-09-20 22:15:01 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $id DETACH DELETE doctor
	                              ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WITH collect(toString(id(patient))) AS __sn__ RETURN __sn__
	                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 22:15:19 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:15:30 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $__id__ RETURN count(patient)
	                                ^
The query used a deprecated function: `id`.
2023-09-20 22:15:31 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WHERE id(patient) = $id DETACH DELETE patient
	                                ^
The query used a deprecated function: `id`.
2023-09-20 22:15:34 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WITH collect(toString(id(patient))) AS __sn__ RETURN __sn__
	                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:15:41 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:15:41 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:15:53 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:15:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:15:57 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:00 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:01 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:06 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:07 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:10 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:11 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:15 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:15 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:19 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:23 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:28 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:33 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:16:33 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) RETURN specialty{.description, .name, __nodeLabels__: labels(specialty), __internalNeo4jId__: id(specialty), __elementId__: toString(id(specialty))}
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:16:41 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:42 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:50 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:50 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:54 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:54 [http-nio-8080-exec-7] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:16:57 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:02 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:02 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:06 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:09 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:13 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:13 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:17 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ RETURN count(specialty)
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:18 [http-nio-8080-exec-4] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (specialty:`Specialty`) WHERE id(specialty) = $id DETACH DELETE specialty
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`OFFERS_SPECIALITY`]->(__srn__:`Specialty`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:17:54 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:17:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:17:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:17:55 [http-nio-8080-exec-5] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:18:01 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN count(hospital)
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:18:02 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $id DETACH DELETE hospital
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:19:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 22:19:58 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 22:19:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:19:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 0 Neo4j repository interfaces.
2023-09-20 22:19:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:19:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 5 Neo4j repository interfaces.
2023-09-20 22:19:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 22:19:59 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 22:19:59 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 22:19:59 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 22:19:59 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1329 ms
2023-09-20 22:19:59 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 606600395 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 22:19:59 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:19:59 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 22:19:59 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:19:59 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:19:59 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:19:59 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:20:00 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 22:20:05 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 22:20:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 22:20:05 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Hospital`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (hospital:`Hospital`) SET hospital = $__properties__ RETURN hospital UNION MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ SET hospital += $__properties__ RETURN hospital
	                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Doctor`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (doctor:`Doctor`) SET doctor = $__properties__ RETURN doctor UNION MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ SET doctor += $__properties__ RETURN doctor
	                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Specialty`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (specialty:`Specialty`) SET specialty = $__properties__ RETURN specialty UNION MATCH (specialty:`Specialty`) WHERE id(specialty) = $__id__ SET specialty += $__properties__ RETURN specialty
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`SPECIALIZES_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`HAS_DOCTOR`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:20:07 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:20:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:20:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:20:08 [http-nio-8080-exec-1] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`CITY`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:21:04 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $__id__ RETURN count(doctor)
	                              ^
The query used a deprecated function: `id`.
2023-09-20 22:21:05 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE id(doctor) = $id DETACH DELETE doctor
	                              ^
The query used a deprecated function: `id`.
2023-09-20 22:24:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-09-20 22:24:00 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-09-20 22:24:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:24:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 0 Neo4j repository interfaces.
2023-09-20 22:24:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Neo4j repositories in DEFAULT mode.
2023-09-20 22:24:01 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 5 Neo4j repository interfaces.
2023-09-20 22:24:02 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2023-09-20 22:24:02 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2023-09-20 22:24:02 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.12]
2023-09-20 22:24:02 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-09-20 22:24:02 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1280 ms
2023-09-20 22:24:02 [restartedMain] INFO  o.n.driver.internal.DriverFactory - Routing driver instance 1829662844 created for server address b3a8699c.databases.neo4j.io:7687
2023-09-20 22:24:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Specialty is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:24:02 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2023-09-20 22:24:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Doctor is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:24:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Hospital is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:24:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.City is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:24:02 [restartedMain] WARN  o.s.d.n.c.m.Neo4jPersistentEntity - The entity com.stackroute.model.Patient is using a Long value for storing internally generated Neo4j ids. The Neo4j internal Long Ids are deprecated, please consider using an external ID generator.
2023-09-20 22:24:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
2023-09-20 22:24:15 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-09-20 22:24:15 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-09-20 22:24:15 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`HAS_DOCTOR`]->(__srn__:`Doctor`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                            ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (doctor:`Doctor`) WHERE toString(id(doctor)) IN $__ids__ OPTIONAL MATCH (doctor)-[__sr__:`SPECIALIZES_IN`]->(__srn__:`Specialty`) WITH collect(toString(id(doctor))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) OPTIONAL MATCH (hospital)-[__sr__:`CITY`]->(__srn__:`City`) WITH collect(toString(id(hospital))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                       ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:24:17 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:24:18 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:24:18 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                                                                                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:24:18 [http-nio-8080-exec-3] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Hospital`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS hospital, __sr__, __srn__ RETURN hospital AS __sn__, __sr__, __srn__
	                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:24:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN count(hospital)
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:24:26 [http-nio-8080-exec-2] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $id DETACH DELETE hospital
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                     ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`Patient`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (patient:`Patient`) SET patient = $__properties__ RETURN patient UNION MATCH (patient:`Patient`) WHERE id(patient) = $__id__ SET patient += $__properties__ RETURN patient
	                                                                                                                                                                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	OPTIONAL MATCH (hlp:`City`) WHERE id(hlp) = $__id__ WITH hlp WHERE hlp IS NULL CREATE (city:`City`) SET city = $__properties__ RETURN city UNION MATCH (city:`City`) WHERE id(city) = $__id__ SET city += $__properties__ RETURN city
	                                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`LOCATES_HOSPITAL`]->(:`Hospital`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (startNode)-[rel:`LOCATES_HOSPITAL`]->(:`Hospital`) WHERE (id(startNode) = $fromId AND NOT (toString(id(rel)) IN $__knownRelationShipIds__)) DELETE rel
	                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                    ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:26:10 [http-nio-8080-exec-6] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	UNWIND $__relationships__ AS relationship WITH relationship MATCH (startNode) WHERE id(startNode) = relationship.fromId MATCH (endNode) WHERE id(endNode) = relationship.toId MERGE (startNode)-[relProps:`LOCATED_IN`]->(endNode) RETURN toString(id(relProps)) AS __elementId__
	                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) WITH collect(toString(id(patient))) AS __sn__ RETURN __sn__
	                                                ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                           ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                      ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (patient:`Patient`) OPTIONAL MATCH (patient)-[__sr__:`LOCATED_IN`]->(__srn__:`City`) WITH collect(toString(id(patient))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                 ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.UnknownRelationshipTypeWarning: The provided relationship type is not in the database.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                       ^
One of the relationship types in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing relationship type is: LOCATES_HOSPITAL)
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                                                                         ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                                                              ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (city:`City`) WHERE toString(id(city)) IN $__ids__ OPTIONAL MATCH (city)-[__sr__:`LOCATES_HOSPITAL`]->(__srn__:`Hospital`) WITH collect(toString(id(city))) AS __sn__, collect(toString(id(__srn__))) AS __srn__, collect(toString(id(__sr__))) AS __sr__ RETURN __sn__, __srn__, __sr__
	                                                                                                                                                       ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                             ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                                                                                                                                                                                                                                                                                               ^
The query used a deprecated function: `id`.
2023-09-20 22:26:21 [http-nio-8080-exec-10] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (rootNodeIds:`Patient`) WHERE toString(id(rootNodeIds)) IN $rootNodeIds WITH collect(rootNodeIds) AS n OPTIONAL MATCH ()-[relationshipIds]-() WHERE toString(id(relationshipIds)) IN $relationshipIds WITH n, collect(DISTINCT relationshipIds) AS __sr__ OPTIONAL MATCH (relatedNodeIds) WHERE toString(id(relatedNodeIds)) IN $relatedNodeIds WITH n, __sr__ AS __sr__, collect(DISTINCT relatedNodeIds) AS __srn__ UNWIND n AS rootNodeIds WITH rootNodeIds AS patient, __sr__, __srn__ RETURN patient AS __sn__, __sr__, __srn__
	                                                                                                                                                                   ^
The query used a deprecated function: `id`.
2023-09-20 22:27:09 [http-nio-8080-exec-8] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WHERE id(hospital) = $__id__ RETURN count(hospital)
	                                  ^
The query used a deprecated function: `id`.
2023-09-20 22:27:13 [http-nio-8080-exec-9] WARN  o.springframework.data.neo4j.cypher - Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.
	MATCH (hospital:`Hospital`) WITH collect(toString(id(hospital))) AS __sn__ RETURN __sn__
	                                                  ^
The query used a deprecated function: `id`.
